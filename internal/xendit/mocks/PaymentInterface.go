// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	xendit "github.com/pandudpn/go-payment-gateway/internal/xendit"
	mock "github.com/stretchr/testify/mock"
)

// PaymentInterface is an autogenerated mock type for the PaymentInterface type
type PaymentInterface struct {
	mock.Mock
}

// Do provides a mock function with given fields: ctx
func (_m *PaymentInterface) Do(ctx context.Context) (*xendit.ChargeResponse, error) {
	ret := _m.Called(ctx)

	var r0 *xendit.ChargeResponse
	if rf, ok := ret.Get(0).(func(context.Context) *xendit.ChargeResponse); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*xendit.ChargeResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetURI provides a mock function with given fields: uri
func (_m *PaymentInterface) SetURI(uri string) {
	_m.Called(uri)
}

// SetUsername provides a mock function with given fields: username
func (_m *PaymentInterface) SetUsername(username string) {
	_m.Called(username)
}

type mockConstructorTestingTNewPaymentInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewPaymentInterface creates a new instance of PaymentInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPaymentInterface(t mockConstructorTestingTNewPaymentInterface) *PaymentInterface {
	mock := &PaymentInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
